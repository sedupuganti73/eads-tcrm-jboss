{"version":3,"sources":["C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/$_lazy_route_resource lazy","C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/add-column/add-column.component.css","C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/add-column/add-column.component.html","C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/add-column/add-column.component.ts","C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/add-database/add-database.component.css","C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/add-database/add-database.component.html","C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/add-database/add-database.component.ts","C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/add-report/add-report.component.css","C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/add-report/add-report.component.html","C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/add-report/add-report.component.ts","C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/add-sfdcdatasource/add-sfdcdatasource.component.css","C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/add-sfdcdatasource/add-sfdcdatasource.component.html","C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/add-sfdcdatasource/add-sfdcdatasource.component.ts","C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/analytics.service.ts","C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/app-routing.module.ts","C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/app.component.css","C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/app.component.html","C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/app.component.ts","C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/app.module.ts","C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/databases/databases.component.css","C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/databases/databases.component.html","C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/databases/databases.component.ts","C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/history/history.component.css","C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/history/history.component.html","C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/history/history.component.ts","C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/report-columns/report-columns.component.css","C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/report-columns/report-columns.component.html","C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/report-columns/report-columns.component.ts","C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/report-columns/type.pipe.ts","C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/reports/query.pipe.ts","C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/reports/reports.component.css","C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/reports/reports.component.html","C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/reports/reports.component.ts","C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/sfdcdatasource/sfdcdatasource.component.css","C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/sfdcdatasource/sfdcdatasource.component.html","C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/sfdcdatasource/sfdcdatasource.component.ts","C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/environments/environment.ts","C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/add-column/add-column.component.css\n// module id = ../../../../../src/app/add-column/add-column.component.css\n// module chunks = main","module.exports = \"<div class=\\\"example-container\\\">\\r\\n  <h1 mat-dialog-title>Add Report Column</h1>\\r\\n  <form class=\\\"example-form\\\" #form=\\\"ngForm\\\" autocomplete=\\\"off\\\">\\r\\n      \\r\\n          <mat-form-field class=\\\"example-full-width\\\" color=\\\"accent\\\">\\r\\n            <input matInput #columnName=\\\"ngModel\\\" appCommandValidator placeholder=\\\"Column Name\\\" readonly [(ngModel)]=\\\"name\\\" name=\\\"name\\\" required>\\r\\n            <mat-hint align=\\\"start\\\"><strong>Name of column</strong> </mat-hint>\\r\\n            \\r\\n            <mat-error *ngIf=\\\"columnName.invalid && (columnName.dirty || columnName.touched) && columnName.errors.required\\\">\\r\\n                  Name is <strong>required</strong>\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        \\r\\n          <br><br>\\r\\n\\r\\n          <mat-form-field class=\\\"example-full-width\\\" color=\\\"accent\\\">\\r\\n            <input matInput #columnLabel=\\\"ngModel\\\" appCommandValidator placeholder=\\\"Column Label\\\" [(ngModel)]=\\\"label\\\" name=\\\"label\\\" required>\\r\\n            <mat-hint align=\\\"start\\\"><strong>Label of column</strong> </mat-hint>\\r\\n            \\r\\n            <mat-error *ngIf=\\\"columnLabel.invalid && (columnLabel.dirty || columnLabel.touched) && columnLabel.errors.required\\\">\\r\\n                  label is <strong>required</strong>\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        \\r\\n          <br><br>\\r\\n            \\r\\n          <mat-form-field class=\\\"example-full-width\\\" color=\\\"accent\\\">\\r\\n            \\r\\n            <mat-select #columnType=\\\"ngModel\\\" placeholder=\\\"Column Type\\\"  [(ngModel)]=\\\"type\\\" name=\\\"type\\\">\\r\\n              <mat-option *ngFor=\\\"let type of columnTypes\\\" [value]=\\\"type.value\\\">\\r\\n                {{ type.viewValue }}\\r\\n              </mat-option>\\r\\n            </mat-select>  \\r\\n            \\r\\n            <mat-hint align=\\\"start\\\"><strong>Type of column</strong> </mat-hint>\\r\\n            \\r\\n            <mat-error *ngIf=\\\"columnType.invalid && (columnType.dirty || columnType.touched) && columnType.errors.required\\\">\\r\\n                  Type is <strong>required</strong>\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        \\r\\n          <br><br>\\r\\n               \\r\\n\\r\\n          <mat-form-field class=\\\"example-full-width\\\" color=\\\"accent\\\">\\r\\n            <input matInput #columnFormat=\\\"ngModel\\\" appCommandValidator placeholder=\\\"Column Format\\\" [(ngModel)]=\\\"format\\\" name=\\\"format\\\">\\r\\n            <mat-hint align=\\\"start\\\"><strong>Format of column</strong> </mat-hint>\\r\\n           \\r\\n          </mat-form-field>\\r\\n        \\r\\n          <br><br>\\r\\n          <mat-form-field class=\\\"example-full-width\\\" color=\\\"accent\\\">\\r\\n            \\r\\n            <mat-select #columnType=\\\"ngModel\\\" placeholder=\\\"Primary Key\\\"  [(ngModel)]=\\\"primaryKey\\\" name=\\\"primaryKey\\\">\\r\\n              <mat-option *ngFor=\\\"let type of primaryKeyType\\\" [value]=\\\"type\\\">\\r\\n                {{ type }}\\r\\n              </mat-option>\\r\\n            </mat-select>  \\r\\n            \\r\\n            <mat-hint align=\\\"start\\\"><strong>Type of column</strong> </mat-hint>\\r\\n            \\r\\n            <mat-error *ngIf=\\\"columnType.invalid && (columnType.dirty || columnType.touched) && columnType.errors.required\\\">\\r\\n                  Type is <strong>required</strong>\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n          \\r\\n          <br><br>\\r\\n\\r\\n          <mat-form-field class=\\\"example-full-width\\\" color=\\\"accent\\\">\\r\\n            <input matInput #columnFormat=\\\"ngModel\\\" appCommandValidator placeholder=\\\"Precision\\\" [(ngModel)]=\\\"precision\\\" name=\\\"precision\\\">\\r\\n            <mat-hint align=\\\"start\\\"><strong>Precision</strong> </mat-hint>\\r\\n           \\r\\n          </mat-form-field>\\r\\n          <br><br>\\r\\n\\r\\n          <mat-form-field class=\\\"example-full-width\\\" color=\\\"accent\\\">\\r\\n            <input matInput #columnFormat=\\\"ngModel\\\" appCommandValidator placeholder=\\\"Scale\\\" [(ngModel)]=\\\"scale\\\" name=\\\"scale\\\">\\r\\n            <mat-hint align=\\\"start\\\"><strong>Scale</strong> </mat-hint>\\r\\n           \\r\\n          </mat-form-field>          \\r\\n        \\r\\n          <br><br>          \\r\\n               \\r\\n            <button *ngIf=\\\"columnId!=null\\\" mat-raised-button [disabled]=\\\"form.invalid\\\" (click)=\\\"editColumn()\\\" color=\\\"primary\\\">\\r\\n              <mat-icon aria-label=\\\"Submit\\\">create</mat-icon>&nbsp;Update Column\\r\\n            </button>  \\r\\n            <button *ngIf=\\\"columnId==null\\\" mat-raised-button [disabled]=\\\"form.invalid\\\" (click)=\\\"addColumn()\\\" color=\\\"primary\\\">\\r\\n                <mat-icon aria-label=\\\"Submit\\\">add</mat-icon>&nbsp;Add Column\\r\\n            </button>  \\r\\n\\r\\n    </form>\\r\\n\\r\\n   \\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/add-column/add-column.component.html\n// module id = ../../../../../src/app/add-column/add-column.component.html\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogTitle} from '@angular/material';\r\nimport {AnalyticsService} from '../analytics.service';\r\n\r\n@Component({\r\n  selector: 'app-add-column',\r\n  templateUrl: './add-column.component.html',\r\n  styleUrls: ['./add-column.component.css'],\r\n  providers: [AnalyticsService]\r\n})\r\nexport class AddColumnComponent  implements OnInit {\r\n  public columnId = '';\r\n  public name = '';\r\n  public label = '';\r\n  public type = '';\r\n  public format = '';\r\n  public primaryKey ='';\r\n  public columnTypes = [{value: 'S', viewValue: 'String'}, {value: 'D', viewValue: 'Date'}\r\n  , {value: 'I', viewValue: 'Integer'} , {value: 'F', viewValue: 'Decimal'},{value: 'A', viewValue: 'Date Time'},{value: 'T', viewValue: 'Time'}];\r\n  public primaryKeyType = ['No','Yes'];\r\n  public precision: number = null;\r\n  public scale: number = null;\r\n\r\n  constructor(public dialogRef: MatDialogRef<AddColumnComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any, private analyticsService: AnalyticsService) { }\r\n\r\n  ngOnInit() {\r\n      if ( this.data && this.data.columnId) {\r\n        this.columnId = this.data.columnId;\r\n        this.analyticsService.getReportColumn(this.data.columnId)\r\n        .subscribe(data => {\r\n               this.name = data.name;\r\n               this.label = data.label;\r\n               this.type = data.type;\r\n               this.format = data.format;\r\n               if (data.primaryKey == 1) {\r\n                   this.primaryKey ='Yes';\r\n               } else {\r\n                  this.primaryKey ='No';\r\n               }\r\n               this.precision = data.precision;\r\n               this.scale = data.scale;\r\n        });\r\n\r\n      }\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close(false);\r\n  }\r\n\r\n  addColumn(): void {\r\n      var primarydataKey = 0;\r\n      if (this.primaryKey == 'Yes') {\r\n          primarydataKey = 1;\r\n      } \r\n      this.analyticsService.\r\n          addReportColumn(this.name , +this.data.reportId, this.label, this.type, this.format, primarydataKey,this.precision,this.scale)\r\n            .subscribe(data => {\r\n            this.dialogRef.close(true);\r\n          });\r\n  }\r\n\r\n  editColumn(): void {\r\n      var primarydataKey = 0;\r\n      if (this.primaryKey == 'Yes') {\r\n          primarydataKey = 1;\r\n      } \r\n    this.analyticsService.\r\n        updateReportColumn(+this.columnId, this.name , +this.data.reportId, this.label, this.type, this.format,primarydataKey,this.precision,this.scale)\r\n          .subscribe(data => {\r\n          this.dialogRef.close(true);\r\n        });\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/add-column/add-column.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\r\\n  .example-full-width {\\r\\n    width: 100%;\\r\\n  }\\r\\n  .alert {\\r\\n    padding: 20px;\\r\\n    background-color: #f44336;\\r\\n    color: white;\\r\\n  }\\r\\n  \\r\\n  .closebtn {\\r\\n    margin-left: 15px;\\r\\n    color: white;\\r\\n    font-weight: bold;\\r\\n    float: right;\\r\\n    font-size: 22px;\\r\\n    line-height: 20px;\\r\\n    cursor: pointer;\\r\\n    transition: 0.3s;\\r\\n  }\\r\\n  \\r\\n  .closebtn:hover {\\r\\n    color: black;\\r\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/add-database/add-database.component.css\n// module id = ../../../../../src/app/add-database/add-database.component.css\n// module chunks = main","module.exports = \"<div class=\\\"example-container\\\">\\r\\n  <button class=\\\"close\\\" style=\\\"float: right;\\\" mat-button (click)=\\\"onNoClick()\\\">X</button>\\r\\n    <h1 mat-dialog-title>Add Database</h1>\\r\\n    <div class=\\\"alert\\\" *ngIf=\\\"errorTextIndicator\\\">\\r\\n      <span class=\\\"closebtn\\\">&times;</span> \\r\\n      <strong>{{errorText}}</strong>\\r\\n    </div>\\r\\n    <form class=\\\"example-form\\\" #form=\\\"ngForm\\\" autocomplete=\\\"off\\\">\\r\\n        \\r\\n            <mat-form-field class=\\\"example-full-width\\\" color=\\\"accent\\\">\\r\\n              <input matInput #columnName=\\\"ngModel\\\" appCommandValidator placeholder=\\\"Database Name\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" required> \\r\\n              <mat-hint align=\\\"start\\\"><strong>Name of Database</strong> </mat-hint>\\r\\n              \\r\\n              <mat-error *ngIf=\\\"columnName.invalid && (columnName.dirty || columnName.touched) && columnName.errors.required\\\">\\r\\n                    Name is <strong>required</strong>\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          \\r\\n            <br><br>\\r\\n  \\r\\n            <mat-form-field class=\\\"example-full-width\\\" color=\\\"accent\\\">\\r\\n              <input matInput #dbDescription=\\\"ngModel\\\" appCommandValidator placeholder=\\\"Description\\\" [(ngModel)]=\\\"description\\\" name=\\\"description\\\" required>\\r\\n              <mat-hint align=\\\"start\\\"><strong>Description of Database</strong> </mat-hint>\\r\\n              \\r\\n              <mat-error *ngIf=\\\"dbDescription.invalid && (dbDescription.dirty || dbDescription.touched) && dbDescription.errors.required\\\">\\r\\n                    Description is <strong>required</strong>\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          \\r\\n            <br><br>\\r\\n              \\r\\n            <mat-form-field class=\\\"example-full-width\\\" color=\\\"accent\\\">\\r\\n              \\r\\n                <input matInput #dbURL=\\\"ngModel\\\" appCommandValidator placeholder=\\\"Connection URL\\\" [(ngModel)]=\\\"url\\\" name=\\\"url\\\" required>\\r\\n                <mat-hint align=\\\"start\\\"><strong>DB Connection URL</strong> </mat-hint>\\r\\n                \\r\\n              <mat-error *ngIf=\\\"dbURL.invalid && (dbURL.dirty || dbURL.touched) && dbURL.errors.required\\\">\\r\\n                    Connection URL is <strong>required</strong>\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <br><br>\\r\\n              \\r\\n            <mat-form-field class=\\\"example-full-width\\\" color=\\\"accent\\\">\\r\\n              \\r\\n                <input matInput #dbURL=\\\"ngModel\\\" appCommandValidator placeholder=\\\"Driver Class Name\\\" [(ngModel)]=\\\"driverClassName\\\" name=\\\"driverClassName\\\" >\\r\\n                <mat-hint align=\\\"start\\\"><strong>Driver Class Name</strong> </mat-hint>\\r\\n            </mat-form-field>\\r\\n          \\r\\n            <br><br>\\r\\n                 \\r\\n            <mat-form-field class=\\\"example-full-width\\\" color=\\\"accent\\\">\\r\\n              \\r\\n                <input matInput #dbUsername=\\\"ngModel\\\" appCommandValidator placeholder=\\\"Username\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" required>\\r\\n                <mat-hint align=\\\"start\\\"><strong>DB username</strong> </mat-hint>\\r\\n                \\r\\n              <mat-error *ngIf=\\\"dbUsername.invalid && (dbUsername.dirty || dbUsername.touched) && dbUsername.errors.required\\\">\\r\\n                   Username is <strong>required</strong>\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          \\r\\n            <br><br>\\r\\n\\r\\n            <mat-form-field class=\\\"example-full-width\\\" color=\\\"accent\\\">\\r\\n              \\r\\n                <input matInput #dbPassword=\\\"ngModel\\\" appCommandValidator placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" type=\\\"password\\\" required>\\r\\n                <mat-hint align=\\\"start\\\"><strong>DB Password</strong> </mat-hint>\\r\\n                \\r\\n              <mat-error *ngIf=\\\"dbPassword.invalid && (dbPassword.dirty || dbPassword.touched) && dbPassword.errors.required\\\">\\r\\n                    Password is <strong>required</strong>\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          \\r\\n            <br><br>\\r\\n\\r\\n  \\r\\n              <button *ngIf=\\\"dsId!=null\\\" mat-raised-button [disabled]=\\\"form.invalid\\\" (click)=\\\"editDB()\\\" color=\\\"primary\\\">\\r\\n                  <mat-icon aria-label=\\\"Submit\\\">create</mat-icon>&nbsp;Update Database\\r\\n              </button>  \\r\\n              <button *ngIf=\\\"dsId==null\\\" mat-raised-button [disabled]=\\\"form.invalid\\\" (click)=\\\"addDB()\\\" color=\\\"primary\\\">\\r\\n                  <mat-icon aria-label=\\\"Submit\\\">add</mat-icon>&nbsp;Add Database\\r\\n              </button>  \\r\\n      </form>\\r\\n  \\r\\n     \\r\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/add-database/add-database.component.html\n// module id = ../../../../../src/app/add-database/add-database.component.html\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogTitle} from '@angular/material';\r\nimport {AnalyticsService} from '../analytics.service';\r\n\r\n@Component({\r\n  selector: 'app-add-database',\r\n  templateUrl: './add-database.component.html',\r\n  providers: [AnalyticsService],\r\n  styleUrls: ['./add-database.component.css']\r\n})\r\nexport class AddDatabaseComponent   implements OnInit {\r\n  public name: string;\r\n  public description: string;\r\n  public url: string;\r\n  public dsId: number;\r\n  public username: string;\r\n  public password: string;\r\n  public errorText: string;\r\n  public errorTextIndicator:boolean = false;\r\n  public driverClassName: string;\r\n\r\n  public title = 'Add Database';\r\n  constructor(public dialogRef: MatDialogRef<AddDatabaseComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any, private analyticsService: AnalyticsService) { }\r\n\r\n\r\n    ngOnInit() {\r\n      if ( this.data && this.data.dsId) {\r\n        this.dsId = this.data.dsId;\r\n        this.analyticsService.getDatabase(this.data.dsId)\r\n        .subscribe(data => {\r\n               const dataSource = data;\r\n               this.name = dataSource.name;\r\n               this.description = dataSource.description;\r\n               this.url = dataSource.url;\r\n               this.dsId = dataSource.dsId;\r\n               this.username = dataSource.dbUsername;\r\n               this.password = dataSource.dbPassword;\r\n               this.driverClassName = dataSource.driverClassName;\r\n               this.title = 'Edit Database ' + dataSource.name;\r\n        });\r\n\r\n      }\r\n    }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close(false);\r\n  }\r\n\r\n  addDB(): void {\r\n      this.analyticsService.\r\n          addDatabase(this.name, this.description,\r\n            this.url, this.username, this.password,this.driverClassName)\r\n          .subscribe(data => {\r\n            this.dialogRef.close(true);\r\n          },\r\n          err =>{\r\n            if(err.error.message){\r\n              this.errorTextIndicator = true;\r\n              this.errorText =  err.error.message;\r\n            }\r\n            console.log(err);\r\n          });\r\n\r\n  }\r\n\r\n  editDB(): void {\r\n    this.analyticsService.\r\n        updateDatabase(this.dsId, this.name, this.description,\r\n          this.url , this.username, this.password,this.driverClassName) \r\n        .subscribe(data => {\r\n          this.dialogRef.close(true);\r\n        },\r\n        err =>{\r\n          if(err.error.message){\r\n            this.errorTextIndicator = true;\r\n            this.errorText =  err.error.message;\r\n          }\r\n          console.log(err);\r\n        });\r\n\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/add-database/add-database.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\r\\n.example-form {\\r\\n    min-width: 150px;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.example-full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.mat-input-invalid {\\r\\n    margin-bottom: 5px;\\r\\n}  \\r\\n\\r\\n.progress-spinner {\\r\\n  left: 35%;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/add-report/add-report.component.css\n// module id = ../../../../../src/app/add-report/add-report.component.css\n// module chunks = main","module.exports = \"<div class=\\\"example-container\\\" style=\\\"height:500px\\\">\\r\\n    <mat-progress-spinner *ngIf=\\\"loading==true\\\"\\r\\n        class=\\\"progress-spinner\\\"\\r\\n        color=\\\"primary\\\"\\r\\n        mode=\\\"indeterminate\\\"\\r\\n        value=\\\"50\\\">\\r\\n    </mat-progress-spinner>\\r\\n    <h1 mat-dialog-title>{{title}}</h1>\\r\\n    <form class=\\\"example-form\\\" #form=\\\"ngForm\\\" autocomplete=\\\"off\\\">\\r\\n            <p style=\\\"color:#f44336\\\">{{errorMessage}}</p>\\r\\n            <mat-form-field class=\\\"example-full-width\\\" color=\\\"accent\\\">\\r\\n              <input matInput #reportName=\\\"ngModel\\\" appCommandValidator placeholder=\\\"Report Name\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" required>\\r\\n              <mat-hint align=\\\"start\\\"><strong>Name of report</strong> </mat-hint>\\r\\n\\r\\n              <mat-error *ngIf=\\\"reportName.invalid && (reportName.dirty || reportName.touched) && reportName.errors.forbiddenCommand\\\">\\r\\n                    Comand cannot start with <strong>open</strong>.\\r\\n              </mat-error>\\r\\n              <mat-error *ngIf=\\\"reportName.invalid && (reportName.dirty || reportName.touched) && reportName.errors.required\\\">\\r\\n                    Name is <strong>required</strong>\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <br><br>\\r\\n\\r\\n            <mat-form-field color=\\\"accent\\\"class=\\\"example-full-width\\\" >\\r\\n\\r\\n                    <mat-select #dbType=\\\"ngModel\\\" placeholder=\\\"Type\\\"  [(ngModel)]=\\\"selectedDB\\\" name=\\\"type\\\" >\\r\\n                        <mat-option *ngFor=\\\"let type of dbTypes\\\" [value]=\\\"type.dsId\\\" >\\r\\n                          {{ type.name }}\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n                      <mat-hint align=\\\"start\\\"><strong >DB Type</strong> </mat-hint>\\r\\n\\r\\n                </mat-form-field>\\r\\n                <br><br>\\r\\n                <mat-form-field color=\\\"accent\\\"class=\\\"example-full-width\\\" >\\r\\n\\r\\n                    <mat-select #dbType=\\\"ngModel\\\" placeholder=\\\"Type\\\"  [(ngModel)]=\\\"selectedForceDB\\\" name=\\\"type\\\" >\\r\\n                        <mat-option *ngFor=\\\"let type of forceDbTypes\\\" [value]=\\\"type.dsId\\\" >\\r\\n                          {{ type.name }}\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n                      <mat-hint align=\\\"start\\\"><strong >Force Type</strong> </mat-hint>\\r\\n\\r\\n                </mat-form-field>\\r\\n                <br><br>\\r\\n              <mat-form-field class=\\\"example-full-width\\\" color=\\\"accent\\\"  >\\r\\n                  <textarea rows=\\\"5\\\" matInput placeholder=\\\"Query\\\" [(ngModel)]=\\\"query\\\" name=\\\"query\\\" required></textarea>\\r\\n                  <mat-hint align=\\\"start\\\"><strong >Query to generate report</strong> </mat-hint>\\r\\n\\r\\n                </mat-form-field>\\r\\n              <br><br>\\r\\n              <mat-form-field class=\\\"example-full-width\\\" color=\\\"accent\\\"  >\\r\\n               <textarea rows=\\\"5\\\" matInput placeholder=\\\"recordCountQuery\\\" [(ngModel)]=\\\"recordCountQuery\\\" name=\\\"recordCountQuery\\\" ></textarea>\\r\\n                  <mat-hint align=\\\"start\\\"><strong >Query to generate record count</strong> </mat-hint>\\r\\n\\r\\n              </mat-form-field>\\r\\n              <br><br>\\r\\n             <mat-form-field class=\\\"example-full-width\\\" color=\\\"accent\\\">\\r\\n              <input matInput #reportName=\\\"ngModel\\\" appCommandValidator placeholder=\\\"App Name\\\" [(ngModel)]=\\\"appName\\\" name=\\\"appName\\\">\\r\\n              <mat-hint align=\\\"start\\\"><strong>Einstein App Name</strong> </mat-hint>\\r\\n            </mat-form-field> \\r\\n            <br><br>\\r\\n             <mat-form-field class=\\\"example-full-width\\\" color=\\\"accent\\\">\\r\\n              <input matInput #reportName=\\\"ngModel\\\" appCommandValidator placeholder=\\\"Flow Name\\\" [(ngModel)]=\\\"flowName\\\" name=\\\"flowName\\\">\\r\\n              <mat-hint align=\\\"start\\\"><strong>Einstein Flow Name</strong> </mat-hint>\\r\\n            </mat-form-field>             \\r\\n            <br><br>             \\r\\n               <mat-form-field color=\\\"accent\\\"class=\\\"example-full-width\\\" >\\r\\n\\r\\n                    <mat-select #dbType=\\\"ngModel\\\" placeholder=\\\"Type\\\"  [(ngModel)]=\\\"loadType\\\" name=\\\"loadType\\\" >\\r\\n                        <mat-option *ngFor=\\\"let type of loadTypes\\\" [value]=\\\"type\\\" >\\r\\n                          {{ type }}\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n                      <mat-hint align=\\\"start\\\"><strong >Load Type</strong> </mat-hint>\\r\\n\\r\\n                </mat-form-field>\\r\\n                <br><br>\\r\\n                  <mat-form-field color=\\\"accent\\\"class=\\\"example-full-width\\\" >\\r\\n\\r\\n                    <mat-select #dbType=\\\"ngModel\\\" placeholder=\\\"methodType\\\"  [(ngModel)]=\\\"methodType\\\" name=\\\"methodType\\\" >\\r\\n                        <mat-option *ngFor=\\\"let type of methodTypes\\\" [value]=\\\"type\\\" >\\r\\n                          {{ type }}\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n                      <mat-hint align=\\\"start\\\"><strong >Method Type</strong> </mat-hint>\\r\\n\\r\\n                </mat-form-field>\\r\\n                <br><br>\\r\\n                    <mat-checkbox  #dbType=\\\"ngModel\\\" placeholder=\\\"isIncremental\\\"  [(ngModel)]=\\\"isIncremental\\\" name=\\\"isIncremental\\\"></mat-checkbox>\\r\\n                      <mat-hint align=\\\"start\\\"><strong >Is Incremental</strong> </mat-hint>\\r\\n                <br><br>\\r\\n                <mat-form-field color=\\\"accent\\\" class=\\\"example-full-width\\\">\\r\\n                      <input matInput #creator=\\\"ngModel\\\" placeholder=\\\"Run Priority\\\" appUrlValidator  [(ngModel)]=\\\"priority\\\" name=\\\"priority\\\" required>\\r\\n                      <mat-hint align=\\\"start\\\"><strong >Priority</strong> </mat-hint>\\r\\n                </mat-form-field>\\r\\n\\r\\n\\r\\n                <br><br>\\r\\n                <mat-form-field color=\\\"accent\\\" class=\\\"example-full-width\\\">\\r\\n                      <input matInput #creator=\\\"ngModel\\\" placeholder=\\\"Hour To Run\\\" appUrlValidator  [(ngModel)]=\\\"runTime\\\" name=\\\"runTime\\\">\\r\\n                      <mat-hint align=\\\"start\\\"><strong >Hour To Run</strong> </mat-hint>\\r\\n                </mat-form-field>\\r\\n\\r\\n\\r\\n                <br><br>\\r\\n                <mat-form-field color=\\\"accent\\\" class=\\\"example-full-width\\\">\\r\\n                      <input matInput #creator=\\\"ngModel\\\" placeholder=\\\"Created By\\\" appUrlValidator  [(ngModel)]=\\\"createdBy\\\" name=\\\"createdBy\\\" required>\\r\\n                      <mat-hint align=\\\"start\\\"><strong >Report Creator user Id</strong> </mat-hint>\\r\\n\\r\\n                      <mat-error *ngIf=\\\"creator.invalid && (creator.dirty || creator.touched) && creator.errors.required\\\">\\r\\n                              Creator is <strong>required</strong>\\r\\n                        </mat-error>\\r\\n                </mat-form-field>\\r\\n\\r\\n\\r\\n                <br><br>\\r\\n\\r\\n              <button *ngIf=\\\"reportId==null\\\" mat-raised-button [disabled]=\\\"form.invalid\\\" (click)=\\\"addReport()\\\" color=\\\"primary\\\">\\r\\n                  <mat-icon aria-label=\\\"Submit\\\">add</mat-icon>&nbsp;Add Report\\r\\n              </button>\\r\\n              <button *ngIf=\\\"reportId!=null\\\" mat-raised-button [disabled]=\\\"form.invalid\\\" (click)=\\\"updateReport()\\\" color=\\\"primary\\\">\\r\\n                  <mat-icon aria-label=\\\"Submit\\\">create</mat-icon>&nbsp;Update Report\\r\\n              </button>\\r\\n\\r\\n\\r\\n      </form>\\r\\n\\r\\n\\r\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/add-report/add-report.component.html\n// module id = ../../../../../src/app/add-report/add-report.component.html\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogTitle} from '@angular/material';\r\nimport {MatCheckboxModule} from '@angular/material';\r\nimport {AnalyticsService} from '../analytics.service';\r\nimport { catchError } from 'rxjs/operators/catchError';\r\n\r\n\r\n@Component({\r\n  selector: 'app-add-report',\r\n  providers: [AnalyticsService],\r\n  templateUrl: './add-report.component.html',\r\n  styleUrls: ['./add-report.component.css']\r\n})\r\nexport class AddReportComponent  implements OnInit {\r\n  public name = '';\r\n  public query = '';\r\n  public createdBy = '';\r\n  public dbTypes = [];\r\n  public title = 'Add Report';\r\n  public reportId: number = null;\r\n  public selectedDB: number;\r\n  public loading = false;\r\n  public errorMessage = '';\r\n  public loadType ='';\r\n  public priority='';\r\n  public loadTypes = ['Once','Daily','Hourly'];\r\n  public runTime='';\r\n  public recordCountQuery ='';\r\n  public methodTypes = ['Overwrite','Append','Upsert'];\r\n  public methodType ='';\r\n  public forceDbTypes = [];\r\n  public selectedForceDB: number;\r\n  public isIncremental = false;\r\n  public appName ='';\r\n  public flowName ='';\r\n  \r\n\r\n  constructor(public dialogRef: MatDialogRef<AddReportComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any, private analyticsService: AnalyticsService\r\n  ) {\r\n        this.analyticsService.getDatabases().subscribe( data => {\r\n            this.dbTypes = data;\r\n            this.selectedDB = this.dbTypes[0].dsId;\r\n        });\r\n        this.analyticsService.getForceDatabases().subscribe( data => {\r\n            this.forceDbTypes = data;\r\n            this.selectedForceDB = this.forceDbTypes[0].dsId;\r\n        });\r\n     }\r\n\r\n  ngOnInit() {\r\n    if ( this.data && this.data.reportId) {\r\n      this.reportId = this.data.reportId;\r\n      this.analyticsService.getReport(this.data.reportId)\r\n      .subscribe(data => {\r\n             const report = data;\r\n             this.name = report.name;\r\n             this.title = 'Edit Report ' + report.name;\r\n             this.query = report.query;\r\n             this.selectedDB =  report.dataSource.dsId;\r\n             this.createdBy = report.createdBy;\r\n             if (report.loadType != null) {\r\n                 if (report.loadType == 0) {\r\n                    this.loadType = 'Once';\r\n                 } else if (report.loadType == 1) {\r\n                    this.loadType = 'Daily';\r\n                 } else if (report.loadType == 2) {\r\n                     this.loadType = 'Hourly';\r\n                 }\r\n             }\r\n             if (report.method != null) {\r\n                 this.methodType = report.method ; \r\n             }             \r\n             this.priority = report.priority;\r\n             this.runTime = report.runTime;\r\n             this.recordCountQuery = report.recordCountQuery;\r\n             this.isIncremental = report.isIncremental;\r\n             this.appName = report.appName;\r\n             this.flowName = report.flowName;\r\n       });\r\n\r\n    }\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close(false);\r\n  }\r\n\r\n  addReport(): void {\r\n      this.loading = true;\r\n      this.errorMessage = '';\r\n      this.analyticsService.\r\n          addReport(this.name, this.query, this.selectedDB,this.selectedForceDB, this.createdBy,this.loadType,this.methodType,this.priority,this.runTime,this.recordCountQuery,this.isIncremental, this.appName,this.flowName)\r\n          .subscribe(data => {\r\n            this.loading = false;\r\n            this.dialogRef.close(true);\r\n          },\r\n          err => {\r\n            console.log(err.error.message);\r\n            this.errorMessage = err.error.message;\r\n            this.loading = false;\r\n          }\r\n          )\r\n          ;\r\n  }\r\n\r\n  updateReport(): void {\r\n    this.analyticsService.updateReport( this.reportId, this.name, this.query, this.selectedDB,this.selectedForceDB, this.createdBy,this.loadType,this.methodType,this.priority,this.runTime,this.recordCountQuery,this.isIncremental,this.appName,this.flowName)\r\n        .subscribe(data => {\r\n          this.dialogRef.close(true);\r\n        });\r\n  }\r\n  \r\n  \r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/add-report/add-report.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".alert {\\r\\n    padding: 20px;\\r\\n    background-color: #f44336;\\r\\n    color: white;\\r\\n  }\\r\\n  \\r\\n  .closebtn {\\r\\n    margin-left: 15px;\\r\\n    color: white;\\r\\n    font-weight: bold;\\r\\n    float: right;\\r\\n    font-size: 22px;\\r\\n    line-height: 20px;\\r\\n    cursor: pointer;\\r\\n    transition: 0.3s;\\r\\n  }\\r\\n  \\r\\n  .closebtn:hover {\\r\\n    color: black;\\r\\n  }\\r\\n  \", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/add-sfdcdatasource/add-sfdcdatasource.component.css\n// module id = ../../../../../src/app/add-sfdcdatasource/add-sfdcdatasource.component.css\n// module chunks = main","module.exports = \"<div class=\\\"example-container\\\">\\r\\n  <!--button mat-icon-button aria-label=\\\"close dialog\\\" mat-dialog-close>\\r\\n    <mat-icon>close</mat-icon>\\r\\n  </button-->\\r\\n    <!--button type=\\\"button\\\" class=\\\"btn-close btn-close-white\\\" aria-label=\\\"Close\\\"></button-->\\r\\n    <button class=\\\"close\\\" style=\\\"float: right;\\\" mat-button (click)=\\\"onNoClick()\\\">X</button>\\r\\n    <h1 mat-dialog-title>Add Force Database</h1>\\r\\n    <div class=\\\"alert\\\" *ngIf=\\\"errorTextIndicator\\\">\\r\\n      <span class=\\\"closebtn\\\">&times;</span> \\r\\n      <strong>{{errorText}}</strong>\\r\\n    </div>\\r\\n       <form class=\\\"example-form\\\" #form=\\\"ngForm\\\" autocomplete=\\\"off\\\" style=\\\"margin-top: 20px;\\\">\\r\\n\\r\\n             <mat-form-field class=\\\"example-full-width\\\" color=\\\"accent\\\">\\r\\n              <input matInput #columnName=\\\"ngModel\\\" appCommandValidator placeholder=\\\"Database Name\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" required>\\r\\n              <mat-hint align=\\\"start\\\"><strong>Name of Database</strong> </mat-hint>\\r\\n              \\r\\n              <mat-error *ngIf=\\\"columnName.invalid && (columnName.dirty || columnName.touched) && columnName.errors.required\\\">\\r\\n                    Name is <strong>required</strong>\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          \\r\\n            <br><br>\\r\\n  \\r\\n            <mat-form-field class=\\\"example-full-width\\\" color=\\\"accent\\\">\\r\\n              <input matInput #dbDescription=\\\"ngModel\\\" appCommandValidator placeholder=\\\"Description\\\" [(ngModel)]=\\\"description\\\" name=\\\"description\\\" required>\\r\\n              <mat-hint align=\\\"start\\\"><strong>Description of Database</strong> </mat-hint>\\r\\n              \\r\\n              <mat-error *ngIf=\\\"dbDescription.invalid && (dbDescription.dirty || dbDescription.touched) && dbDescription.errors.required\\\">\\r\\n                    Description is <strong>required</strong>\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          \\r\\n            <br><br>\\r\\n              \\r\\n            <mat-form-field class=\\\"example-full-width\\\" color=\\\"accent\\\">\\r\\n              \\r\\n                <input matInput #dbURL=\\\"ngModel\\\" appCommandValidator placeholder=\\\"Connection URL\\\" [(ngModel)]=\\\"url\\\" name=\\\"url\\\" required>\\r\\n                <mat-hint align=\\\"start\\\"><strong>DB Connection URL</strong> </mat-hint>\\r\\n                \\r\\n              <mat-error *ngIf=\\\"dbURL.invalid && (dbURL.dirty || dbURL.touched) && dbURL.errors.required\\\">\\r\\n                    Connection URL is <strong>required</strong>\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n             <br><br>\\r\\n                             \\r\\n            <mat-form-field class=\\\"example-full-width\\\" color=\\\"accent\\\">\\r\\n              \\r\\n                <input matInput #dbusername=\\\"ngModel\\\" appCommandValidator placeholder=\\\"Username\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" required>\\r\\n                <mat-hint align=\\\"start\\\"><strong>username</strong> </mat-hint>\\r\\n                \\r\\n              <mat-error *ngIf=\\\"dbusername.invalid && (dbusername.dirty || dbusername.touched) && dbusername.errors.required\\\">\\r\\n                   Username is <strong>required</strong>\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          \\r\\n            <br><br>\\r\\n\\r\\n            <mat-form-field class=\\\"example-full-width\\\" color=\\\"accent\\\">\\r\\n              \\r\\n                <input matInput #dbpassword=\\\"ngModel\\\" appCommandValidator placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" type=\\\"password\\\" required>\\r\\n                <mat-hint align=\\\"start\\\"><strong>Password</strong> </mat-hint>\\r\\n                \\r\\n              <mat-error *ngIf=\\\"dbpassword.invalid && (dbpassword.dirty ||dbpassword.touched) && dbpassword.errors.required\\\">\\r\\n                    Password is <strong>required</strong>\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          \\r\\n            <br><br>\\r\\n              \\r\\n            <mat-form-field class=\\\"example-full-width\\\" color=\\\"accent\\\">\\r\\n              \\r\\n              <input matInput #clientIdKey=\\\"ngModel\\\" appCommandValidator placeholder=\\\"Client Key\\\" [(ngModel)]=\\\"clientId\\\" name=\\\"clientId\\\" required>\\r\\n              <mat-hint align=\\\"start\\\"><strong>Client Key</strong> </mat-hint>\\r\\n              \\r\\n            <mat-error *ngIf=\\\"clientIdKey.invalid && (clientIdKey.dirty || clientIdKey.touched) && clientIdKey.errors.required\\\">\\r\\n                  Client Key is <strong>required</strong>\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n          <br><br>\\r\\n          <mat-form-field class=\\\"example-full-width\\\" color=\\\"accent\\\">\\r\\n              \\r\\n            <input matInput #clientSecretKey=\\\"ngModel\\\" appCommandValidator placeholder=\\\"Client Secret\\\" [(ngModel)]=\\\"clientSecret\\\" name=\\\"clientSecret\\\" required>\\r\\n            <mat-hint align=\\\"start\\\"><strong>Client Key</strong> </mat-hint>\\r\\n            \\r\\n          <mat-error *ngIf=\\\"clientSecretKey.invalid && (clientSecretKey.dirty || clientSecretKey.touched) && clientSecretKey.errors.required\\\">\\r\\n                Client Secret is <strong>required</strong>\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n        <br><br>\\r\\n  \\r\\n              <button *ngIf=\\\"dsId!=null\\\" mat-raised-button [disabled]=\\\"form.invalid\\\" (click)=\\\"editDB()\\\" color=\\\"primary\\\">\\r\\n                  <mat-icon aria-label=\\\"Submit\\\">create</mat-icon>&nbsp;Update Force Database\\r\\n              </button>  \\r\\n              <button *ngIf=\\\"dsId==null\\\" mat-raised-button [disabled]=\\\"form.invalid\\\" (click)=\\\"addDB()\\\" color=\\\"primary\\\">\\r\\n                  <mat-icon aria-label=\\\"Submit\\\">add</mat-icon>&nbsp;Add Force Database\\r\\n              </button>  \\r\\n              \\r\\n      </form>\\r\\n  \\r\\n     \\r\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/add-sfdcdatasource/add-sfdcdatasource.component.html\n// module id = ../../../../../src/app/add-sfdcdatasource/add-sfdcdatasource.component.html\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogTitle} from '@angular/material';\r\nimport {AnalyticsService} from '../analytics.service';\r\n\r\n@Component({\r\n  selector: 'app-add-sfdcdatasource',\r\n  templateUrl: './add-sfdcdatasource.component.html',\r\n  providers: [AnalyticsService],\r\n  styleUrls: ['./add-sfdcdatasource.component.css']\r\n})\r\nexport class AddSfdcdatasourceComponent implements OnInit {\r\n  public name: string;\r\n  public description: string;\r\n  public url: string;\r\n  public dsId: number;\r\n  public username: string;\r\n  public password: string;\r\n  public errorText: string;\r\n  public errorTextIndicator:boolean = false;\r\n  public clientId: string;\r\n  public clientSecret: string;\r\n\r\n  public title = 'Add Force Database';\r\n  constructor(public dialogRef: MatDialogRef<AddSfdcdatasourceComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any, private analyticsService: AnalyticsService) { }\r\n\r\n  ngOnInit() {\r\n   if ( this.data && this.data.dsId) {\r\n        this.dsId = this.data.dsId;\r\n        this.analyticsService.getForceDatabase(this.data.dsId)\r\n        .subscribe(data => {\r\n               const dataSource = data;\r\n               this.name = dataSource.name;\r\n               this.description = dataSource.description;\r\n               this.url = dataSource.url;\r\n               this.dsId = dataSource.dsId;\r\n               this.username = dataSource.username;\r\n               this.password = dataSource.password;\r\n               this.clientId = dataSource.clientId;\r\n               this.clientSecret = dataSource.clientSecret;\r\n               this.title = 'Edit Force Database ' + dataSource.name;\r\n        });\r\n\r\n      }\r\n  }\r\n      \r\n  onNoClick(): void {\r\n    this.dialogRef.close(false);\r\n  }\r\n\r\n  addDB(): void {\r\n      this.analyticsService.\r\n          addForceDatabase(this.name, this.description,\r\n            this.url, this.username, this.password,this.clientId,this.clientSecret)\r\n          .subscribe(data => {\r\n            this.dialogRef.close(true);\r\n          },\r\n            err =>{\r\n              if(err.error.message){\r\n                this.errorTextIndicator = true;\r\n                this.errorText =  err.error.message;\r\n              }\r\n              console.log(err);\r\n            }\r\n          );\r\n\r\n  }\r\n\r\n  editDB(): void {\r\n    this.analyticsService.\r\n        updateForceDatabase(this.dsId, this.name, this.description,\r\n          this.url , this.username, this.password,this.clientId,this.clientSecret)\r\n        .subscribe(data => {\r\n          this.dialogRef.close(true);\r\n        },\r\n        err =>{\r\n          if(err.error.message){\r\n            this.errorTextIndicator = true;\r\n            this.errorText =  err.error.message; \r\n          }\r\n          console.log(err);\r\n        });\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/add-sfdcdatasource/add-sfdcdatasource.component.ts","import { Injectable } from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport { HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class AnalyticsService {\r\n  prefix = '/api';\r\n  constructor(private http: HttpClient) { }\r\n  getReports(): Observable<any> {\r\n    return this.http.get(this.prefix + '/reports/');\r\n  }\r\n\r\n  getReport(reportId: number): Observable<any> {\r\n    return this.http.get(this.prefix + '/reports/' + reportId);\r\n  }\r\n\r\n  addReport( name: string, query: string, dataSource: number,sfdcDataSource: number, createdBy: string, loadType: string,methodType: string, priority: string ,runTime: string ,recordCountQuery: string ,isIncremental: boolean,appName: string, flowName: string  ): Observable<any> {\r\n    return this.http.post(this.prefix + '/reports/',\r\n    { name: name,  query: query , label: '', dataSource: dataSource,sfdcDataSource: sfdcDataSource, createdBy: createdBy, type: loadType,methodType: methodType,priority: priority, runTime: runTime, recordCountQuery: recordCountQuery, isIncremental: isIncremental, appName: appName,flowName: flowName});\r\n  }\r\n\r\n  updateReport( reportId: number, name: string, query: string, dataSource: number,sfdcDataSource: number, createdBy: string, loadType: string,methodType: string, priority: string ,runTime: string ,recordCountQuery: string ,isIncremental: boolean,appName: string, flowName: string ): Observable<any> {\r\n    return this.http.post(\r\n      this.prefix + '/reports/',\r\n      {reportId: reportId, name: name,  query: query , label: '', dataSource: dataSource,sfdcDataSource: sfdcDataSource, createdBy: createdBy, type: loadType,methodType: methodType, priority: priority, runTime: runTime, recordCountQuery: recordCountQuery, isIncremental: isIncremental, appName: appName,flowName: flowName});\r\n  }\r\n\r\n  deleteReport ( reportId: number): Observable<any> {\r\n    return this.http.delete(this.prefix + '/reports/delete/' + reportId);\r\n  }\r\n  getReportColumn(columnId: number): Observable<any> {\r\n    return this.http.get(this.prefix + '/columns/column/' + columnId);\r\n  }\r\n  getReportColumns(reportId: number): Observable<any> {\r\n    return this.http.get(this.prefix + '/columns/' + reportId);\r\n  }\r\n  getHistory(reportId: number): Observable<any> {\r\n    return this.http.get(this.prefix + '/history/' + reportId);\r\n  }\r\n  \r\n  \r\n  addReportColumn( name: string, reportId: number, label: string, type: string, format: string, primaryKey: number,precision: number,scale: number ): Observable<any> {\r\n    return this.http.post(this.prefix + '/columns/create', { name: name, reportId: reportId, label: label, type: type, format: format, primaryKey: primaryKey,precision: precision,scale: scale});\r\n  }\r\n\r\n  updateReportColumn( columnId: number, name: string, reportId: number, label: string, type: string, format: string, primaryKey: number,precision: number,scale: number ): Observable<any> {\r\n    return this.http.post(this.prefix +\r\n      '/columns/create',\r\n      { columnId: columnId, name: name, reportId: reportId, label: label, type: type, format: format, primaryKey: primaryKey,precision: precision,scale: scale});\r\n  }\r\n\r\n  deleteReportColumn ( columnId: number, reportId: number): Observable<any> {\r\n    return this.http.delete(this.prefix + '/columns/delete/' + columnId + '/' + reportId);\r\n  }\r\n\r\n  getDatabases(): Observable<any> {\r\n    return this.http.get(this.prefix + '/ds/');\r\n  }\r\n  getDatabase(dsId: number): Observable<any> {\r\n    return this.http.get(this.prefix + '/ds/' + dsId); \r\n  }\r\n  addDatabase( name: string, description: string, url: string, username: string, password: string,driverClassName: string ): Observable<any> {\r\n    return this.http.post(this.prefix + '/ds/',\r\n    {name: name, description: description, url: url, dbUsername: username, dbPassword: password, driverClassName: driverClassName});\r\n  }\r\n  updateDatabase( dsId: number, name: string, description: string, url: string, username: string, password: string,driverClassName: string ): Observable<any> {\r\n    return this.http.post(this.prefix + '/ds/',\r\n    { dsId: dsId, name: name, description: description, url: url, dbUsername: username, dbPassword: password, driverClassName: driverClassName});\r\n  }\r\n  deleteDatabase ( dsId: number): Observable<any> {\r\n    return this.http.delete(this.prefix + '/ds/' + dsId);\r\n  }\r\n  runReport( reportId: number ): Observable<any> {\r\n    return this.http.get(this.prefix + '/load/' + reportId);\r\n  }\r\n  \r\n  getForceDatabases(): Observable<any> {\r\n    return this.http.get(this.prefix + '/forceDs/');\r\n  }\r\n  getForceDatabase(dsId: number): Observable<any> {\r\n    return this.http.get(this.prefix + '/forceDs/' + dsId);\r\n  }\r\n  addForceDatabase( name: string, description: string, url: string, username: string, password: string, clientId: string, clientSecret: string ): Observable<any> {\r\n    return this.http.post(this.prefix + '/forceDs/',\r\n    {name: name, description: description, url: url, username: username, password: password, clientId: clientId, clientSecret: clientSecret});\r\n  }\r\n  updateForceDatabase( dsId: number, name: string, description: string, url: string, username: string, password: string, clientId: string, clientSecret: string ): Observable<any> {\r\n    return this.http.post(this.prefix + '/forceDs/',\r\n    { dsId: dsId, name: name, description: description, url: url, username: username, password: password, clientId: clientId, clientSecret: clientSecret});\r\n  }\r\n  deleteForceDatabase ( dsId: number): Observable<any> {\r\n    return this.http.delete(this.prefix + '/forceDs/' + dsId);\r\n  }  \r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/analytics.service.ts","import { NgModule }             from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n \r\nimport {AppComponent} from './app.component' \r\nimport {ReportsComponent} from './reports/reports.component';\r\nimport {DatabasesComponent} from './databases/databases.component';\r\nimport {ReportColumnsComponent} from './report-columns/report-columns.component';\r\nimport {HistoryComponent} from './history/history.component';\r\nimport {SfdcdatasourceComponent} from './sfdcdatasource/sfdcdatasource.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/reports', pathMatch: 'full' },\r\n  { path: 'reports', component: ReportsComponent },\r\n  { path: 'datasources', component: DatabasesComponent},\r\n  { path: 'history/:report-id', component: HistoryComponent},\r\n  { path: 'columns/:report-id', component: ReportColumnsComponent},\r\n  { path: 'sfdcDatasources', component: SfdcdatasourceComponent} \r\n];\r\n \r\n@NgModule({\r\n  imports: [ \r\n    RouterModule.forRoot(\r\n      routes,\r\n      //{ enableTracing: true } \r\n    )\r\n  ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AppRoutingModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\r\\n.page-title{\\r\\n    margin-left: auto;\\r\\n}\\r\\n\\r\\n.site-title {\\r\\n    margin-left: auto;\\r\\n    \\r\\n}\\r\\n\\r\\n.main-container {\\r\\n    position: fixed;\\r\\n    height:100%;\\r\\n    width:98%;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.mat-drawer{\\r\\n    height: 100%;\\r\\n    position: fixed;\\r\\n    border-right: 1px solid rgba(255, 255, 255, 0.12);\\r\\n}\\r\\n\\r\\n.menu-title {\\r\\n    margin: 0;\\r\\n    padding: 21px;\\r\\n    text-align: center;\\r\\n    background-color: rgba(255, 255, 255, 0.32);\\r\\n}\\r\\n\\r\\nmat-list-item.mat-list-item.active {\\r\\n    /* color: #f44336; */\\r\\n    background-color: rgba(0,0,0,.87);\\r\\n}\\r\\n\\r\\n.mat-list, .mat-nav-list, .mat-selection-list {\\r\\n    padding-top:0;\\r\\n}\\r\\n\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<mat-sidenav-container class=\\\"example-container\\\">\\r\\n    <mat-sidenav mode=\\\"side\\\" [opened]=\\\"showNav\\\" mat-divider>\\r\\n            <nav>\\r\\n                <h3 class=\\\"menu-title\\\">Menu</h3>\\r\\n                <mat-nav-list>\\r\\n                        <mat-list-item (click)=\\\"showNav=false;title='Reports'\\\" [routerLink]=\\\"['/reports']\\\"  routerLinkActive=\\\"active\\\"><mat-icon style=\\\"vertical-align: middle;\\\">report</mat-icon>&nbsp;Reports</mat-list-item>\\r\\n                        <mat-divider></mat-divider>\\r\\n                        <mat-list-item (click)=\\\"showNav=false;title='Data Sources'\\\"  [routerLink]=\\\"['/datasources']\\\"  routerLinkActive=\\\"active\\\"><mat-icon style=\\\"vertical-align: middle;\\\">cloud</mat-icon>&nbsp;Data Sources</mat-list-item>\\r\\n                        <mat-divider></mat-divider>\\r\\n                        <mat-list-item (click)=\\\"showNav=false;title='Force Data Sources'\\\"  [routerLink]=\\\"['/sfdcDatasources']\\\"  routerLinkActive=\\\"active\\\"><mat-icon style=\\\"vertical-align: middle;\\\">cloud</mat-icon>&nbsp;Force Data Sources</mat-list-item>\\r\\n                        <mat-divider></mat-divider>\\r\\n                      </mat-nav-list>\\r\\n            </nav>\\r\\n           \\r\\n    </mat-sidenav>\\r\\n    <mat-sidenav-content>\\r\\n            <mat-toolbar color=\\\"warn\\\">\\r\\n                    <mat-icon *ngIf=\\\"!showNav\\\" class=\\\"demo-toolbar-icon\\\" style=\\\"cursor:pointer\\\" (click)=\\\"showNav=true\\\">menu</mat-icon>&nbsp;\\r\\n                    <mat-icon *ngIf=\\\"showNav\\\" class=\\\"demo-toolbar-icon\\\" style=\\\"cursor:pointer\\\" (click)=\\\"showNav=false\\\">keyboard_backspace</mat-icon>&nbsp;\\r\\n                    \\r\\n                    <!-- <img src=\\\"/assets/bnsf-logo.png\\\" style=\\\"height:85%\\\"/> -->\\r\\n                    <span class=\\\"site-title\\\">Force Analytics</span>\\r\\n                    <!--span class=\\\"page-title\\\"><mat-icon style=\\\"vertical-align: middle;\\\">report</mat-icon>&nbsp; {{title}}</span-->\\r\\n                    \\r\\n                   \\r\\n                  </mat-toolbar>\\r\\n        <div  (click)=\\\"showNav=false\\\">\\r\\n                <router-outlet></router-outlet>\\r\\n        </div>          \\r\\n        \\r\\n        \\r\\n\\r\\n        <div style=\\\"text-align:center; margin-top:10px\\\"><mat-card-footer >  </mat-card-footer> </div>         \\r\\n    </mat-sidenav-content>\\r\\n</mat-sidenav-container>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Reports';\r\n  showNav = false;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\nimport { ReportsComponent } from './reports/reports.component';\r\nimport { ReportColumnsComponent } from './report-columns/report-columns.component';\r\nimport { HistoryComponent } from './history/history.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport {MatToolbarModule, MatSidenavModule, MatListModule, MatSelectModule, MatSnackBarModule,\r\n  MatTooltipModule, MatProgressBarModule, MatDialogModule, MatCardModule, MatProgressSpinnerModule,\r\n  MatButtonModule, MatIconModule, MatFormFieldModule, MatInputModule, MatTableModule} from '@angular/material';\r\nimport { AddReportComponent } from './add-report/add-report.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AddColumnComponent } from './add-column/add-column.component';\r\nimport { DatabasesComponent } from './databases/databases.component';\r\nimport { AddDatabaseComponent } from './add-database/add-database.component';\r\nimport { TypePipe } from './report-columns/type.pipe';\r\nimport { QueryPipe } from './reports/query.pipe';\r\nimport { SfdcdatasourceComponent } from './sfdcdatasource/sfdcdatasource.component';\r\nimport { AddSfdcdatasourceComponent } from './add-sfdcdatasource/add-sfdcdatasource.component';\r\nimport { MatCheckboxModule } from '@angular/material';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ReportsComponent,\r\n    ReportColumnsComponent,\r\n    HistoryComponent,\r\n    AddReportComponent,\r\n    AddColumnComponent,\r\n    DatabasesComponent,\r\n    AddDatabaseComponent,\r\n    SfdcdatasourceComponent,\r\n    AddSfdcdatasourceComponent,\r\n    TypePipe,\r\n    QueryPipe\r\n  ],\r\n  imports: [\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatProgressBarModule,\r\n    MatTooltipModule,\r\n    MatToolbarModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatDialogModule,\r\n    MatTableModule,\r\n    MatSnackBarModule,\r\n    MatSelectModule,\r\n    MatProgressSpinnerModule,\r\n    HttpClientModule,\r\n    MatCheckboxModule\r\n  ],\r\n  entryComponents: [AddReportComponent, AddColumnComponent, AddDatabaseComponent,AddSfdcdatasourceComponent],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".page-title{\\r\\n    margin-left: auto;\\r\\n}\\r\\n\\r\\n.site-title {\\r\\n    margin-left: 20px;\\r\\n    \\r\\n}\\r\\n\\r\\n.main-container {\\r\\n    position: fixed;\\r\\n    height:100%;\\r\\n    width:98%;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.page-container {\\r\\n    padding:10px;\\r\\n}\\r\\n\\r\\n.page-title{\\r\\n   font-family:   Roboto,\\\"Helvetica Neue\\\",sans-serif;\\r\\n   margin:0;\\r\\n}\\r\\n\\r\\n\\r\\n.add-button {\\r\\n    position:absolute;\\r\\n    top:100px;\\r\\n    right:95px\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/databases/databases.component.css\n// module id = ../../../../../src/app/databases/databases.component.css\n// module chunks = main","module.exports = \"\\r\\n<div class=\\\"page-container\\\">\\r\\n    <button mat-fab (click)=\\\"addDatabase(dsId)\\\" color=\\\"primary\\\"  matTooltip=\\\"Add Database\\\" style=\\\"position:fixed;top:95px;right:95px\\\">\\r\\n        <mat-icon >add</mat-icon>\\r\\n      </button>\\r\\n\\r\\n      <h3 class=\\\"page-title\\\">Registered Databases</h3>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<br><br>\\r\\n<div class=\\\"alert\\\" *ngIf=\\\"errorTextIndicator\\\">\\r\\n  <span class=\\\"closebtn\\\">&times;</span>\\r\\n  <strong>{{errorText}}</strong>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"example-container mat-elevation-z8\\\">\\r\\n      <mat-progress-bar *ngIf=\\\"loading\\\"\\r\\n          class=\\\"example-margin\\\"\\r\\n          color=\\\"primary\\\"\\r\\n          mode=\\\"indeterminate\\\">\\r\\n      </mat-progress-bar>\\r\\n      <mat-table #table [dataSource]=\\\"datasource\\\">\\r\\n\\r\\n        <!--- Note that these columns can be defined in any order.\\r\\n              The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n\\r\\n\\r\\n        <ng-container matColumnDef=\\\"name\\\">\\r\\n          <mat-header-cell *matHeaderCellDef> NAME </mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"description\\\">\\r\\n            <mat-header-cell *matHeaderCellDef> DESCRIPTION </mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.description}} </mat-cell>\\r\\n          </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"url\\\">\\r\\n          <mat-header-cell *matHeaderCellDef> URL </mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let element\\\"> {{element.url}} </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"dbUsername\\\">\\r\\n          <mat-header-cell *matHeaderCellDef> USERNAME </mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let element\\\"> {{element.dbUsername}} </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"dbPassword\\\">\\r\\n          <mat-header-cell *matHeaderCellDef> PASSWORD </mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let element\\\"> *********** </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"actions\\\">\\r\\n          <mat-header-cell *matHeaderCellDef> ACTIONS </mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let element\\\" class=\\\"button-row\\\">\\r\\n\\r\\n                    <button mat-mini-fab color=\\\"accent\\\" matTooltip=\\\"Edit Data Source\\\" (click)=\\\"addDatabase(element.dsId)\\\">\\r\\n                        <mat-icon >create</mat-icon>\\r\\n                      </button>\\r\\n                      <button mat-mini-fab color=\\\"warn\\\" matTooltip=\\\"Delete Data Source\\\" (click)=\\\"delete(element.dsId)\\\">\\r\\n                          <mat-icon >delete_forever</mat-icon>\\r\\n                        </button>\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n\\r\\n        <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n        <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n      </mat-table>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/databases/databases.component.html\n// module id = ../../../../../src/app/databases/databases.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport {DataSource} from '@angular/cdk/collections';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/of';\r\nimport {AnalyticsService} from '../analytics.service';\r\nimport {AddDatabaseComponent} from '../add-database/add-database.component';\r\nimport {MatDialog, MatDialogRef, MatSnackBar, MAT_DIALOG_DATA} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-databases',\r\n  templateUrl: './databases.component.html',\r\n  styleUrls: ['./databases.component.css'],\r\n  providers: [AnalyticsService]\r\n})\r\nexport class DatabasesComponent implements OnInit {\r\n\r\n  public datasource: DataSource<DBDataSource> = new DsDataSource() ;\r\n  public displayedColumns = [ 'name', 'description', 'url', 'dbUsername', 'dbPassword', 'actions'];\r\n  public loading = true;\r\n  public errorTextIndicator:boolean = false;\r\n  public errorText: string;\r\n  public dsId: number;\r\n\r\n  constructor(private analyticsService: AnalyticsService, public dialog: MatDialog, public snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n    this.analyticsService.getDatabases().subscribe(data => {\r\n        dataSources = data;\r\n        this.datasource = new DsDataSource();\r\n        this.loading = false;\r\n    });\r\n  }\r\n\r\n  delete(dsId: string): void {\r\n      this.loading = true;\r\n      this.analyticsService.deleteDatabase(+dsId).subscribe(data => {\r\n        dataSources = data;\r\n        this.datasource = new DsDataSource();\r\n        this.loading = false;\r\n        this.snackBar.open('Data Source Deleted', null,\r\n        {\r\n          duration: 1000\r\n        });\r\n      });\r\n  }\r\n\r\n  addDatabase(dsId: number): void {\r\n\r\n    let dialogRef;\r\n    if (dsId) {\r\n       dialogRef = this.dialog.open(AddDatabaseComponent, {\r\n        width: '500px', data: {dsId: dsId}\r\n      });\r\n    } else {\r\n       dialogRef = this.dialog.open(AddDatabaseComponent, {\r\n        width: '500px'\r\n      });\r\n    }\r\n\r\n\r\n\r\n    dialogRef.afterClosed().subscribe(refreshValues => {\r\n      console.log('The dialog was closed ' + refreshValues);\r\n      if (refreshValues) {\r\n        this.loading = true;\r\n        this.analyticsService.getDatabases().subscribe(data => {\r\n            dataSources = data;\r\n            this.datasource = new DsDataSource();\r\n            this.loading = false;\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n\r\n\r\nexport interface DBDataSource {\r\n  dsId: string;\r\n  name: string;\r\n  description: string;\r\n  url: string;\r\n  dbUsername: string;\r\n  dbPassword: string;\r\n  driverClassName: string;\r\n}\r\n\r\nlet dataSources: DBDataSource[] = [];\r\n\r\n\r\n/**\r\n * Data source to provide what data should be rendered in the table. The observable provided\r\n * in connect should emit exactly the data that should be rendered by the table. If the data is\r\n * altered, the observable should emit that new set of data on the stream. In our case here,\r\n * we return a stream that contains only one set of data that doesn't change.\r\n */\r\nexport class DsDataSource extends DataSource<any> {\r\n  /*constructor(private siteId:string, private adminService:AdminService){\r\n    super();\r\n  }*/\r\n\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<DBDataSource[]> {\r\n    return Observable.of(dataSources);\r\n  }\r\n\r\n  disconnect() {}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/databases/databases.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/history/history.component.css\n// module id = ../../../../../src/app/history/history.component.css\n// module chunks = main","module.exports = \"<div class=\\\"page-container\\\">\\r\\n    <div> <a [routerLink]=\\\"['/reports']\\\"  style=\\\"text-decoration:none; color: #f44336;\\\">Registered Reports</a> &nbsp;\\r\\n      / &nbsp; <p style=\\\"display:inline\\\" class=\\\"page-title\\\">Report History</p> </div>\\r\\n\\r\\n      \\r\\n  \\r\\n  <br><br>\\r\\n  \\r\\n  <div class=\\\"example-container mat-elevation-z8\\\">\\r\\n        <mat-progress-bar *ngIf=\\\"loading\\\"\\r\\n            class=\\\"example-margin\\\"\\r\\n            color=\\\"primary\\\"\\r\\n            mode=\\\"indeterminate\\\">\\r\\n        </mat-progress-bar>\\r\\n        <mat-table #table [dataSource]=\\\"datasource\\\">\\r\\n      \\r\\n          <!--- Note that these columns can be defined in any order.\\r\\n                The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n      \\r\\n          <ng-container matColumnDef=\\\"message\\\">\\r\\n            <mat-header-cell *matHeaderCellDef> Message </mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.message}} </mat-cell>\\r\\n          </ng-container>\\r\\n           \\r\\n          <ng-container matColumnDef=\\\"startDateStr\\\">\\r\\n            <mat-header-cell *matHeaderCellDef> Start Date </mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.startDateStr}} </mat-cell>\\r\\n          </ng-container>\\r\\n      \\r\\n          <ng-container matColumnDef=\\\"endDateStr\\\">\\r\\n              <mat-header-cell *matHeaderCellDef> End Date </mat-header-cell>\\r\\n              <mat-cell *matCellDef=\\\"let element\\\"> {{element.endDateStr}} </mat-cell>\\r\\n          </ng-container>  \\r\\n\\r\\n          <ng-container matColumnDef=\\\"recordCountBefore\\\">\\r\\n            <mat-header-cell *matHeaderCellDef> Count Before Run </mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.recordCountBefore}} </mat-cell>\\r\\n          </ng-container>\\r\\n      \\r\\n          <ng-container matColumnDef=\\\"recordCountAfter\\\">\\r\\n            <mat-header-cell *matHeaderCellDef> Count After Run </mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.recordCountAfter}} </mat-cell>\\r\\n          </ng-container> \\r\\n          \\r\\n                      \\r\\n       \\r\\n          \\r\\n  \\r\\n          <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n          <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n        </mat-table>\\r\\n      </div>\\r\\n  \\r\\n\\r\\n    </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/history/history.component.html\n// module id = ../../../../../src/app/history/history.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport {DataSource} from '@angular/cdk/collections';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/of';\r\nimport {AnalyticsService} from '../analytics.service';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-history',\r\n  templateUrl: './history.component.html',\r\n  styleUrls: ['./history.component.css'],\r\n  providers: [AnalyticsService]\r\n})\r\nexport class HistoryComponent implements OnInit {\r\n  public datasource: DataSource<ReportHistory> = new ReportHistoriesDataSource() ;\r\n  public displayedColumns = [ 'startDateStr', 'endDateStr',  'recordCountBefore', 'recordCountAfter', 'message'];\r\n  public loading = true;\r\n  public reportId: number;\r\n  constructor(private route: ActivatedRoute, private analyticsService: AnalyticsService, public dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n   this.reportId = +this.route.snapshot.paramMap.get('report-id');\r\n    this.analyticsService.getHistory(this.reportId).subscribe(data => {\r\n        histories = data;\r\n        this.datasource = new ReportHistoriesDataSource();\r\n        this.loading = false;\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport interface ReportHistory {\r\n\r\n  historyId: string;\r\n  reportId: string;\r\n  startDateStr: string;\r\n  endDateStr: string;\r\n  message: string;\r\n  recordCountBefore:number;\r\n  recordCountAfter:number;\r\n\r\n\r\n}\r\n\r\nlet histories: ReportHistory[] = [];\r\n\r\nexport class ReportHistoriesDataSource extends DataSource<any> {\r\n  /*constructor(private siteId:string, private adminService:AdminService){\r\n    super();\r\n  }*/\r\n\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<ReportHistory[]> {\r\n    return Observable.of(histories);\r\n  }\r\n\r\n  disconnect() {}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/history/history.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".page-title{\\r\\n    margin-left: auto;\\r\\n}\\r\\n\\r\\n.site-title {\\r\\n    margin-left: 20px;\\r\\n    \\r\\n}\\r\\n\\r\\n.main-container {\\r\\n    position: fixed;\\r\\n    height:100%;\\r\\n    width:98%;\\r\\n}\\r\\n\\r\\n\\r\\n.page-container {\\r\\n    padding:10px;\\r\\n}\\r\\n\\r\\n.page-title{\\r\\n   font-family:   Roboto,\\\"Helvetica Neue\\\",sans-serif;\\r\\n   margin:0;\\r\\n}\\r\\n\\r\\n\\r\\n.add-button {\\r\\n    position: absolute;\\r\\n    top:100px;\\r\\n    right:95px\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/report-columns/report-columns.component.css\n// module id = ../../../../../src/app/report-columns/report-columns.component.css\n// module chunks = main","module.exports = \"<div class=\\\"page-container\\\">\\r\\n    <div> <a [routerLink]=\\\"['/reports']\\\"  style=\\\"text-decoration:none; color: #f44336;\\\">Registered Reports</a> &nbsp;\\r\\n      / &nbsp; <p style=\\\"display:inline\\\" class=\\\"page-title\\\">Registered Columns</p> </div>\\r\\n    \\r\\n    \\r\\n    <!--button mat-fab (click)=\\\"addEditColumn()\\\" color=\\\"primary\\\"  matTooltip=\\\"Add Column\\\" class=\\\"add-button\\\">\\r\\n        <mat-icon >add</mat-icon>\\r\\n      </button--> \\r\\n      \\r\\n  \\r\\n  <br><br>\\r\\n  \\r\\n  <div class=\\\"example-container mat-elevation-z8\\\">\\r\\n        <mat-progress-bar *ngIf=\\\"loading\\\"\\r\\n            class=\\\"example-margin\\\"\\r\\n            color=\\\"primary\\\"\\r\\n            mode=\\\"indeterminate\\\">\\r\\n        </mat-progress-bar>\\r\\n        <mat-table #table [dataSource]=\\\"datasource\\\">\\r\\n      \\r\\n          <!--- Note that these columns can be defined in any order.\\r\\n                The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n      \\r\\n          \\r\\n          <ng-container matColumnDef=\\\"name\\\">\\r\\n            <mat-header-cell *matHeaderCellDef> NAME </mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </mat-cell>\\r\\n          </ng-container>\\r\\n      \\r\\n          <ng-container matColumnDef=\\\"label\\\">\\r\\n              <mat-header-cell *matHeaderCellDef> LABEL </mat-header-cell>\\r\\n              <mat-cell *matCellDef=\\\"let element\\\"> {{element.label}} </mat-cell>\\r\\n            </ng-container>  \\r\\n\\r\\n          <ng-container matColumnDef=\\\"type\\\">\\r\\n            <mat-header-cell *matHeaderCellDef> TYPE </mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.type | type}} </mat-cell>\\r\\n          </ng-container>\\r\\n      \\r\\n          <ng-container matColumnDef=\\\"format\\\">\\r\\n            <mat-header-cell *matHeaderCellDef> FORMAT </mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.format}} </mat-cell>\\r\\n          </ng-container> \\r\\n          \\r\\n           \\r\\n       \\r\\n          <ng-container matColumnDef=\\\"actions\\\">\\r\\n            <mat-header-cell *matHeaderCellDef> ACTIONS </mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element\\\" class=\\\"button-row\\\"> \\r\\n                  \\r\\n                      <button mat-mini-fab color=\\\"accent\\\" matTooltip=\\\"edit column\\\" (click)=\\\"addEditColumn(element.columnId)\\\">\\r\\n                          <mat-icon >create</mat-icon>\\r\\n                        </button>    \\r\\n                        <!--button mat-mini-fab color=\\\"warn\\\" matTooltip=\\\"delete column\\\" (click)=\\\"delete(element.columnId)\\\">\\r\\n                            <mat-icon >delete_forever</mat-icon>\\r\\n                          </button-->     \\r\\n            </mat-cell>\\r\\n          </ng-container>  \\r\\n       \\r\\n  \\r\\n          <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n          <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n        </mat-table>\\r\\n      </div>\\r\\n  \\r\\n\\r\\n    </div>\\r\\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/report-columns/report-columns.component.html\n// module id = ../../../../../src/app/report-columns/report-columns.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport {DataSource} from '@angular/cdk/collections';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/of';\r\nimport {AnalyticsService} from '../analytics.service';\r\nimport {AddColumnComponent} from '../add-column/add-column.component';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-report-columns',\r\n  templateUrl: './report-columns.component.html',\r\n  styleUrls: ['./report-columns.component.css'],\r\n  providers: [AnalyticsService]\r\n})\r\nexport class ReportColumnsComponent implements OnInit {\r\n  public datasource: DataSource<Column> = new ColumnsDataSource() ;\r\n  public displayedColumns = [ 'name', 'label',  'type', 'format', 'actions'];\r\n  public loading = true;\r\n  public reportId: number;\r\n  constructor(private route: ActivatedRoute, private analyticsService: AnalyticsService, public dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    this.reportId = +this.route.snapshot.paramMap.get('report-id');\r\n    this.analyticsService.getReportColumns(this.reportId).subscribe(data => {\r\n        columns = data;\r\n        this.datasource = new ColumnsDataSource();\r\n        this.loading = false;\r\n    });\r\n  }\r\n\r\n  delete(columnId: string): void {\r\n      this.loading = true;\r\n      this.analyticsService.deleteReportColumn(+columnId, this.reportId).subscribe(data => {\r\n        columns = data;\r\n        this.datasource = new ColumnsDataSource();\r\n        this.loading = false;\r\n      });\r\n  }\r\n\r\n  addEditColumn(columnId: string): void {\r\n    let dialogRef;\r\n    if ( columnId ) {\r\n      dialogRef = this.dialog.open(AddColumnComponent, {\r\n        width: '500px', data: { columnId: columnId, reportId: this.reportId}\r\n      });\r\n    } else {\r\n      dialogRef = this.dialog.open(AddColumnComponent, {\r\n        width: '500px', data: { reportId: this.reportId}\r\n      });\r\n    }\r\n\r\n\r\n    dialogRef.afterClosed().subscribe(refreshValues => {\r\n      console.log('The dialog was closed ' + refreshValues);\r\n      if ( refreshValues) {\r\n        this.loading = true;\r\n        this.analyticsService.getReportColumns(this.reportId).subscribe(data => {\r\n            columns = data;\r\n            this.datasource = new ColumnsDataSource();\r\n            this.loading = false;\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n\r\n\r\nexport interface Column {\r\n\r\n  columnId: string;\r\n  reportId: string;\r\n  name: string;\r\n  label: string;\r\n  type: string;\r\n  format: string;\r\n\r\n}\r\n\r\nlet columns: Column[] = [];\r\n\r\n\r\n/**\r\n * Data source to provide what data should be rendered in the table. The observable provided\r\n * in connect should emit exactly the data that should be rendered by the table. If the data is\r\n * altered, the observable should emit that new set of data on the stream. In our case here,\r\n * we return a stream that contains only one set of data that doesn't change.\r\n */\r\nexport class ColumnsDataSource extends DataSource<any> {\r\n  /*constructor(private siteId:string, private adminService:AdminService){\r\n    super();\r\n  }*/\r\n\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<Column[]> {\r\n    return Observable.of(columns);\r\n  }\r\n\r\n  disconnect() {}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/report-columns/report-columns.component.ts","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'type'\r\n})\r\nexport class TypePipe implements PipeTransform {\r\n\r\n  transform(value: any, args?: any): any {\r\n    if ( value === 'S') {\r\n      return 'String';\r\n    } else if ( value === 'D' ) {\r\n      return 'Date';\r\n    } else if ( value === 'I' ) {\r\n      return 'Integer';\r\n    } else if ( value === 'F' ) {\r\n      return 'Decimal';\r\n    } else if ( value === 'A' ) {\r\n      return 'Date Time'; \r\n    } else if ( value === 'T' ) { \r\n      return 'Time'; \r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/report-columns/type.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'query'\r\n})\r\nexport class QueryPipe implements PipeTransform {\r\n\r\n  transform(value: any, args?: any): any {\r\n    return value.substring(0, 50) + '...';\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/reports/query.pipe.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".main-container {\\r\\n    position: fixed;\\r\\n    height:100%;\\r\\n    width:98%;\\r\\n}\\r\\n\\r\\n.page-container {\\r\\n    padding:10px;\\r\\n}\\r\\n\\r\\n.page-title{\\r\\n   font-family:   Roboto,\\\"Helvetica Neue\\\",sans-serif;\\r\\n   margin:0;\\r\\n}\\r\\n\\r\\n\\r\\n.add-button {\\r\\n    position:absolute;\\r\\n    top:100px;\\r\\n    right:95px\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/reports/reports.component.css\n// module id = ../../../../../src/app/reports/reports.component.css\n// module chunks = main","module.exports = \"<div class=\\\"page-container\\\">\\r\\n\\r\\n    <button mat-fab (click)=\\\"addEditReport(reportId)\\\" color=\\\"primary\\\"  matTooltip=\\\"Add Report\\\" class=\\\"add-button\\\">\\r\\n        <mat-icon >add</mat-icon>\\r\\n      </button>\\r\\n      <h3 class=\\\"page-title\\\">Registered Reports </h3>\\r\\n\\r\\n\\r\\n\\r\\n<br><br>\\r\\n\\r\\n<div class=\\\"example-container mat-elevation-z8\\\">\\r\\n      <mat-progress-bar *ngIf=\\\"loading\\\"\\r\\n          class=\\\"example-margin\\\"\\r\\n          color=\\\"primary\\\"\\r\\n          mode=\\\"indeterminate\\\">\\r\\n      </mat-progress-bar>\\r\\n      <mat-table #table [dataSource]=\\\"datasource\\\">\\r\\n\\r\\n        <!--- Note that these columns can be defined in any order.\\r\\n              The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n\\r\\n\\r\\n        <ng-container matColumnDef=\\\"name\\\">\\r\\n          <mat-header-cell *matHeaderCellDef> NAME </mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n\\r\\n\\r\\n        <ng-container matColumnDef=\\\"query\\\">\\r\\n            <mat-header-cell *matHeaderCellDef> QUERY </mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element\\\" style=\\\"padding-right:10px\\\" [matTooltip]=\\\"element.query\\\"> {{element.query | query }} </mat-cell>\\r\\n          </ng-container>\\r\\n\\r\\n\\r\\n        <ng-container matColumnDef=\\\"type\\\">\\r\\n          <mat-header-cell *matHeaderCellDef>DB TYPE </mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let element\\\"> {{element.dataSource.name}} </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"sfdctype\\\">\\r\\n          <mat-header-cell *matHeaderCellDef>Force TYPE </mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let element\\\"> {{element.sfdcDataSource.name}} </mat-cell>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"createdBy\\\">\\r\\n          <mat-header-cell *matHeaderCellDef> CREATED BY </mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let element\\\"> {{element.createdBy}} </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"actions\\\">\\r\\n          <mat-header-cell *matHeaderCellDef> ACTIONS </mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let element\\\" class=\\\"button-row\\\">\\r\\n                  <button mat-mini-fab matTooltip=\\\"view columns\\\" color=\\\"primary\\\"  [routerLink]=\\\"['/columns', element.reportId]\\\">\\r\\n                    <mat-icon >view_column</mat-icon>\\r\\n                  </button>\\r\\n                  <button mat-mini-fab style=\\\"background-color: #18BC9C\\\"  matTooltip=\\\"run report\\\" (click)=\\\"runReport(element.reportId)\\\">\\r\\n                    <mat-icon >play_arrow</mat-icon>\\r\\n                  </button>\\r\\n                  <button mat-mini-fab style=\\\"background-color: #69f0ae\\\"  matTooltip=\\\"history\\\" [routerLink]=\\\"['/history', element.reportId]\\\">\\r\\n                      <mat-icon >history</mat-icon>\\r\\n                    </button>\\r\\n                  <button mat-mini-fab color=\\\"accent\\\" matTooltip=\\\"edit report\\\" (click)=\\\"addEditReport(element.reportId)\\\">\\r\\n                      <mat-icon >create</mat-icon>\\r\\n                    </button>\\r\\n                  <button mat-mini-fab color=\\\"warn\\\" matTooltip=\\\"delete report\\\" (click)=\\\"delete(element.reportId)\\\">\\r\\n                      <mat-icon >delete_forever</mat-icon>\\r\\n                    </button>\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n\\r\\n        <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n        <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n      </mat-table>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/reports/reports.component.html\n// module id = ../../../../../src/app/reports/reports.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport {DataSource} from '@angular/cdk/collections';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/of';\r\nimport {AnalyticsService} from '../analytics.service';\r\nimport {AddReportComponent} from '../add-report/add-report.component';\r\nimport {MatDialog, MatDialogRef, MatSnackBar, MAT_DIALOG_DATA} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-reports',\r\n  templateUrl: './reports.component.html',\r\n  styleUrls: ['./reports.component.css'],\r\n  providers: [AnalyticsService]\r\n})\r\nexport class ReportsComponent implements OnInit {\r\n  public datasource: DataSource<Report> = new ReportsDataSource() ;\r\n  public displayedColumns = [ 'name', 'query', 'type', 'createdBy', 'actions'];\r\n  public loading = true;\r\n  public reportId: string;\r\n  constructor(private analyticsService: AnalyticsService, public dialog: MatDialog, public snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n    this.analyticsService.getReports().subscribe(data => {\r\n        reports = data;\r\n        this.datasource = new ReportsDataSource();\r\n        this.loading = false;\r\n    });\r\n  }\r\n\r\n  delete(reportId: string): void {\r\n      this.loading = true;\r\n      this.analyticsService.deleteReport(+reportId).subscribe(data => {\r\n        reports = data;\r\n        this.datasource = new ReportsDataSource();\r\n        this.loading = false;\r\n        this.snackBar.open('Report Deleted', null,\r\n        {\r\n          duration: 1000\r\n        });\r\n      });\r\n  }\r\n  runReport(reportId: string): void {\r\n    this.analyticsService.runReport(+reportId)\r\n    .subscribe(result => {\r\n      this.snackBar.open('Report triggered', null,\r\n      {\r\n        duration: 1000\r\n      });\r\n    });\r\n  }\r\n\r\n  addEditReport(reportId: string): void {\r\n    let dialogRef;\r\n    if ( reportId) {\r\n       dialogRef = this.dialog.open(AddReportComponent, {\r\n        width: '500px', data: { reportId: reportId}\r\n      });\r\n    } else {\r\n       dialogRef = this.dialog.open(AddReportComponent, {\r\n        width: '500px'\r\n      });\r\n    }\r\n\r\n\r\n    dialogRef.afterClosed().subscribe(refreshValues => {\r\n      console.log('The dialog was closed ' + refreshValues);\r\n      if ( refreshValues) {\r\n        this.loading = true;\r\n        this.analyticsService.getReports().subscribe(data => {\r\n            reports = data;\r\n            this.datasource = new ReportsDataSource();\r\n            this.loading = false;\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n\r\n\r\nexport interface Report {\r\n\r\n  reportId: string;\r\n  name: string;\r\n  dbUsername: string;\r\n  dbPassword: string;\r\n  query: string;\r\n  label: string;\r\n  type: string;\r\n  createdBy: string;\r\n\r\n}\r\n\r\nlet reports: Report[] = [];\r\n\r\n\r\n/**\r\n * Data source to provide what data should be rendered in the table. The observable provided\r\n * in connect should emit exactly the data that should be rendered by the table. If the data is\r\n * altered, the observable should emit that new set of data on the stream. In our case here,\r\n * we return a stream that contains only one set of data that doesn't change.\r\n */\r\nexport class ReportsDataSource extends DataSource<any> {\r\n  /*constructor(private siteId:string, private adminService:AdminService){\r\n    super();\r\n  }*/\r\n\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<Report[]> {\r\n    return Observable.of(reports);\r\n  }\r\n\r\n  disconnect() {}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/reports/reports.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".cdk-overlay-pane.example-container {\\r\\n    position: relative!important;\\r\\n  }\\r\\n  .close.mat-button {\\r\\n    position: absolute;\\r\\n    float: right;\\r\\n    top: 0;\\r\\n    right: 0;\\r\\n    padding: 5px;\\r\\n    line-height: 14px;\\r\\n    min-width: auto;\\r\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/sfdcdatasource/sfdcdatasource.component.css\n// module id = ../../../../../src/app/sfdcdatasource/sfdcdatasource.component.css\n// module chunks = main","module.exports = \"\\r\\n<div class=\\\"page-container\\\">\\r\\n    <button mat-fab (click)=\\\"addDatabase(dsId)\\\" color=\\\"primary\\\"  matTooltip=\\\"Add SFDC Connection\\\" style=\\\"position:fixed;top:95px;right:95px\\\">\\r\\n        <mat-icon >add</mat-icon>\\r\\n      </button>\\r\\n\\r\\n      <h3 class=\\\"page-title\\\">Registered SFDC Connections</h3>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<br><br>\\r\\n\\r\\n<div class=\\\"example-container mat-elevation-z8\\\">\\r\\n      <mat-progress-bar *ngIf=\\\"loading\\\"\\r\\n          class=\\\"example-margin\\\"\\r\\n          color=\\\"primary\\\"\\r\\n          mode=\\\"indeterminate\\\">\\r\\n      </mat-progress-bar>\\r\\n      <mat-table #table [dataSource]=\\\"datasource\\\">\\r\\n\\r\\n        <!--- Note that these columns can be defined in any order.\\r\\n              The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n\\r\\n\\r\\n        <ng-container matColumnDef=\\\"name\\\">\\r\\n          <mat-header-cell *matHeaderCellDef> NAME </mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"description\\\">\\r\\n            <mat-header-cell *matHeaderCellDef> DESCRIPTION </mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.description}} </mat-cell>\\r\\n          </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"url\\\">\\r\\n          <mat-header-cell *matHeaderCellDef> URL </mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let element\\\"> {{element.url}} </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"username\\\">\\r\\n          <mat-header-cell *matHeaderCellDef> USERNAME </mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let element\\\"> {{element.username}} </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"password\\\">\\r\\n          <mat-header-cell *matHeaderCellDef> PASSWORD </mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let element\\\"> *********** </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"actions\\\">\\r\\n          <mat-header-cell *matHeaderCellDef> ACTIONS </mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let element\\\" class=\\\"button-row\\\">\\r\\n\\r\\n                    <button mat-mini-fab color=\\\"accent\\\" matTooltip=\\\"Edit Data Source\\\" (click)=\\\"addDatabase(element.dsId)\\\">\\r\\n                        <mat-icon >create</mat-icon>\\r\\n                      </button>\\r\\n                      <button mat-mini-fab color=\\\"warn\\\" matTooltip=\\\"Delete Data Source\\\" (click)=\\\"delete(element.dsId)\\\">\\r\\n                          <mat-icon >delete_forever</mat-icon>\\r\\n                        </button>\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n\\r\\n        <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n        <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n      </mat-table>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/sfdcdatasource/sfdcdatasource.component.html\n// module id = ../../../../../src/app/sfdcdatasource/sfdcdatasource.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport {DataSource} from '@angular/cdk/collections';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/of';\r\nimport {AnalyticsService} from '../analytics.service';\r\nimport {AddSfdcdatasourceComponent} from '../add-sfdcdatasource/add-sfdcdatasource.component';\r\nimport {MatDialog, MatDialogRef, MatSnackBar, MAT_DIALOG_DATA} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-sfdcdatasource',\r\n  templateUrl: './sfdcdatasource.component.html',\r\n  styleUrls: ['./sfdcdatasource.component.css'],\r\n   providers: [AnalyticsService]\r\n})\r\nexport class SfdcdatasourceComponent implements OnInit {\r\n\r\n  public datasource: DataSource<SFDCDataSource> = new DsDataSource() ;\r\n  public displayedColumns = [ 'name', 'description', 'url', 'username', 'password', 'actions'];\r\n  public loading = true;\r\n  public dsId: number;\r\n  constructor(private analyticsService: AnalyticsService, public dialog: MatDialog, public snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n    this.analyticsService.getForceDatabases().subscribe(data => {\r\n        dataSources = data;\r\n        this.datasource = new DsDataSource();\r\n        this.loading = false;\r\n    });\r\n  }\r\n\r\n  delete(dsId: string): void {\r\n      this.loading = true;\r\n      this.analyticsService.deleteForceDatabase(+dsId).subscribe(data => {\r\n        dataSources = data;\r\n        this.datasource = new DsDataSource();\r\n        this.loading = false;\r\n        this.snackBar.open('Data Source Deleted', null,\r\n        {\r\n          duration: 1000\r\n        });\r\n      });\r\n  }\r\n\r\n  addDatabase(dsId: number): void {\r\n\r\n    let dialogRef;\r\n    if (dsId) {\r\n       dialogRef = this.dialog.open(AddSfdcdatasourceComponent, {\r\n        width: '500px', data: {dsId: dsId}\r\n      });\r\n    } else {\r\n       dialogRef = this.dialog.open(AddSfdcdatasourceComponent, {\r\n        width: '500px'\r\n      });\r\n    }\r\n\r\n\r\n\r\n    dialogRef.afterClosed().subscribe(refreshValues => {\r\n      console.log('The dialog was closed ' + refreshValues);\r\n      if (refreshValues) {\r\n        this.loading = true;\r\n        this.analyticsService.getForceDatabases().subscribe(data => {\r\n            dataSources = data;\r\n            this.datasource = new DsDataSource();\r\n            this.loading = false;\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n\r\n\r\nexport interface SFDCDataSource {\r\n  dsId: string;\r\n  name: string;\r\n  description: string;\r\n  url: string;\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nlet dataSources: SFDCDataSource[] = [];\r\n\r\n\r\n/**\r\n * Data source to provide what data should be rendered in the table. The observable provided\r\n * in connect should emit exactly the data that should be rendered by the table. If the data is\r\n * altered, the observable should emit that new set of data on the stream. In our case here,\r\n * we return a stream that contains only one set of data that doesn't change.\r\n */\r\nexport class DsDataSource extends DataSource<any> {\r\n  /*constructor(private siteId:string, private adminService:AdminService){\r\n    super();\r\n  }*/\r\n\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<SFDCDataSource[]> {\r\n    return Observable.of(dataSources);\r\n  }\r\n\r\n  disconnect() {}\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/app/sfdcdatasource/sfdcdatasource.component.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  name: 'default',\r\n  baseUrl: 'http://localhost:8080/analytics/'\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/tgj81/Projects/Angular_Projects/Angular_Development/eads-tcrm-jboss/src/main/angular/analytics/src/main.ts"],"sourceRoot":"webpack:///"}